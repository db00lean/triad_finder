// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Loop_realfft_be_desc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        dout_V_TDATA,
        dout_V_TVALID,
        dout_V_TREADY,
        descramble_buf_0_M_imag_V_address0,
        descramble_buf_0_M_imag_V_ce0,
        descramble_buf_0_M_imag_V_q0,
        descramble_buf_0_M_imag_V_address1,
        descramble_buf_0_M_imag_V_ce1,
        descramble_buf_0_M_imag_V_q1,
        descramble_buf_1_M_imag_V_address0,
        descramble_buf_1_M_imag_V_ce0,
        descramble_buf_1_M_imag_V_q0,
        descramble_buf_1_M_imag_V_address1,
        descramble_buf_1_M_imag_V_ce1,
        descramble_buf_1_M_imag_V_q1,
        descramble_buf_0_M_real_V_address0,
        descramble_buf_0_M_real_V_ce0,
        descramble_buf_0_M_real_V_q0,
        descramble_buf_0_M_real_V_address1,
        descramble_buf_0_M_real_V_ce1,
        descramble_buf_0_M_real_V_q1,
        descramble_buf_1_M_real_V_address0,
        descramble_buf_1_M_real_V_ce0,
        descramble_buf_1_M_real_V_q0,
        descramble_buf_1_M_real_V_address1,
        descramble_buf_1_M_real_V_ce1,
        descramble_buf_1_M_real_V_q1
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state15 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [31:0] dout_V_TDATA;
output   dout_V_TVALID;
input   dout_V_TREADY;
output  [7:0] descramble_buf_0_M_imag_V_address0;
output   descramble_buf_0_M_imag_V_ce0;
input  [15:0] descramble_buf_0_M_imag_V_q0;
output  [7:0] descramble_buf_0_M_imag_V_address1;
output   descramble_buf_0_M_imag_V_ce1;
input  [15:0] descramble_buf_0_M_imag_V_q1;
output  [7:0] descramble_buf_1_M_imag_V_address0;
output   descramble_buf_1_M_imag_V_ce0;
input  [15:0] descramble_buf_1_M_imag_V_q0;
output  [7:0] descramble_buf_1_M_imag_V_address1;
output   descramble_buf_1_M_imag_V_ce1;
input  [15:0] descramble_buf_1_M_imag_V_q1;
output  [7:0] descramble_buf_0_M_real_V_address0;
output   descramble_buf_0_M_real_V_ce0;
input  [15:0] descramble_buf_0_M_real_V_q0;
output  [7:0] descramble_buf_0_M_real_V_address1;
output   descramble_buf_0_M_real_V_ce1;
input  [15:0] descramble_buf_0_M_real_V_q1;
output  [7:0] descramble_buf_1_M_real_V_address0;
output   descramble_buf_1_M_real_V_ce0;
input  [15:0] descramble_buf_1_M_real_V_q0;
output  [7:0] descramble_buf_1_M_real_V_address1;
output   descramble_buf_1_M_real_V_ce1;
input  [15:0] descramble_buf_1_M_real_V_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg descramble_buf_0_M_imag_V_ce0;
reg descramble_buf_0_M_imag_V_ce1;
reg descramble_buf_1_M_imag_V_ce0;
reg descramble_buf_1_M_imag_V_ce1;
reg descramble_buf_0_M_real_V_ce0;
reg descramble_buf_0_M_real_V_ce1;
reg descramble_buf_1_M_real_V_ce0;
reg descramble_buf_1_M_real_V_ce1;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [8:0] twid_rom_0_address0;
reg    twid_rom_0_ce0;
wire   [15:0] twid_rom_0_q0;
wire   [8:0] twid_rom_1_address0;
reg    twid_rom_1_ce0;
wire   [15:0] twid_rom_1_q0;
reg    dout_V_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter11;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln80_reg_658;
reg   [0:0] icmp_ln80_reg_658_pp0_iter10_reg;
reg    ap_enable_reg_pp0_iter12;
reg   [0:0] icmp_ln80_reg_658_pp0_iter11_reg;
reg   [9:0] i1_0_i_reg_217;
reg   [9:0] i1_0_i_reg_217_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
wire    ap_block_state10_pp0_stage0_iter8;
wire    ap_block_state11_pp0_stage0_iter9;
wire    ap_block_state12_pp0_stage0_iter10;
wire    ap_block_state13_pp0_stage0_iter11;
reg    ap_block_state13_io;
wire    ap_block_state14_pp0_stage0_iter12;
reg    ap_block_state14_io;
reg    ap_block_pp0_stage0_11001;
reg   [9:0] i1_0_i_reg_217_pp0_iter2_reg;
reg   [9:0] i1_0_i_reg_217_pp0_iter3_reg;
wire   [0:0] icmp_ln80_fu_247_p2;
reg   [0:0] icmp_ln80_reg_658_pp0_iter1_reg;
reg   [0:0] icmp_ln80_reg_658_pp0_iter2_reg;
reg   [0:0] icmp_ln80_reg_658_pp0_iter3_reg;
reg   [0:0] icmp_ln80_reg_658_pp0_iter4_reg;
reg   [0:0] icmp_ln80_reg_658_pp0_iter5_reg;
reg   [0:0] icmp_ln80_reg_658_pp0_iter6_reg;
reg   [0:0] icmp_ln80_reg_658_pp0_iter7_reg;
reg   [0:0] icmp_ln80_reg_658_pp0_iter8_reg;
reg   [0:0] icmp_ln80_reg_658_pp0_iter9_reg;
wire   [9:0] i_fu_253_p2;
reg   [9:0] i_reg_662;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln101_fu_259_p2;
reg   [0:0] icmp_ln101_reg_667;
reg   [0:0] icmp_ln101_reg_667_pp0_iter1_reg;
reg   [0:0] icmp_ln101_reg_667_pp0_iter2_reg;
reg   [0:0] icmp_ln101_reg_667_pp0_iter3_reg;
reg   [0:0] icmp_ln101_reg_667_pp0_iter4_reg;
reg   [0:0] icmp_ln101_reg_667_pp0_iter5_reg;
reg   [0:0] icmp_ln101_reg_667_pp0_iter6_reg;
reg   [0:0] icmp_ln101_reg_667_pp0_iter7_reg;
reg   [0:0] icmp_ln101_reg_667_pp0_iter8_reg;
reg   [0:0] icmp_ln101_reg_667_pp0_iter9_reg;
reg   [0:0] icmp_ln101_reg_667_pp0_iter10_reg;
wire   [7:0] trunc_ln104_fu_271_p1;
reg   [7:0] trunc_ln104_reg_671;
reg   [0:0] tmp_3_reg_676;
reg   [0:0] tmp_3_reg_676_pp0_iter1_reg;
reg   [0:0] tmp_3_reg_676_pp0_iter2_reg;
reg   [0:0] tmp_3_reg_676_pp0_iter3_reg;
wire   [63:0] zext_ln104_fu_283_p1;
reg   [63:0] zext_ln104_reg_682;
reg   [15:0] descramble_buf_0_M_7_reg_728;
reg    ap_enable_reg_pp0_iter2;
reg   [15:0] descramble_buf_1_M_7_reg_733;
wire   [0:0] icmp_ln99_fu_310_p2;
reg   [0:0] icmp_ln99_reg_738;
reg   [15:0] descramble_buf_0_M_1_reg_744;
reg    ap_enable_reg_pp0_iter3;
reg   [15:0] descramble_buf_1_M_1_reg_749;
reg   [15:0] descramble_buf_0_M_3_reg_754;
reg   [15:0] descramble_buf_1_M_3_reg_759;
reg   [15:0] descramble_buf_0_M_6_reg_764;
reg   [15:0] descramble_buf_1_M_6_reg_769;
wire   [15:0] p_Val2_4_fu_321_p2;
reg   [15:0] p_Val2_4_reg_774;
wire  signed [15:0] p_Val2_s_fu_333_p3;
reg  signed [15:0] p_Val2_s_reg_779;
reg  signed [15:0] p_Val2_s_reg_779_pp0_iter5_reg;
reg  signed [15:0] p_Val2_s_reg_779_pp0_iter6_reg;
reg  signed [15:0] p_Val2_s_reg_779_pp0_iter7_reg;
reg  signed [15:0] p_Val2_s_reg_779_pp0_iter8_reg;
wire  signed [15:0] p_Val2_1_fu_338_p3;
reg  signed [15:0] p_Val2_1_reg_785;
reg  signed [15:0] p_Val2_1_reg_785_pp0_iter5_reg;
reg  signed [15:0] p_Val2_1_reg_785_pp0_iter6_reg;
reg  signed [15:0] p_Val2_1_reg_785_pp0_iter7_reg;
reg  signed [15:0] p_Val2_1_reg_785_pp0_iter8_reg;
wire   [16:0] ret_V_fu_359_p2;
reg   [16:0] ret_V_reg_791;
reg   [16:0] ret_V_reg_791_pp0_iter5_reg;
reg   [16:0] ret_V_reg_791_pp0_iter6_reg;
reg   [16:0] ret_V_reg_791_pp0_iter7_reg;
reg   [16:0] ret_V_reg_791_pp0_iter8_reg;
reg   [16:0] ret_V_reg_791_pp0_iter9_reg;
wire   [16:0] ret_V_3_fu_365_p2;
reg   [16:0] ret_V_3_reg_798;
wire   [16:0] ret_V_1_fu_375_p2;
reg   [16:0] ret_V_1_reg_803;
reg   [16:0] ret_V_1_reg_803_pp0_iter5_reg;
reg   [16:0] ret_V_1_reg_803_pp0_iter6_reg;
reg   [16:0] ret_V_1_reg_803_pp0_iter7_reg;
reg   [16:0] ret_V_1_reg_803_pp0_iter8_reg;
reg   [16:0] ret_V_1_reg_803_pp0_iter9_reg;
wire   [16:0] ret_V_2_fu_381_p2;
reg   [16:0] ret_V_2_reg_810;
reg   [15:0] trunc_ln1148_7_reg_815;
reg   [0:0] tmp_7_reg_820;
reg   [0:0] tmp_7_reg_820_pp0_iter5_reg;
reg   [15:0] trunc_ln1148_3_reg_825;
reg   [15:0] trunc_ln1148_3_reg_825_pp0_iter5_reg;
wire   [15:0] select_ln1148_fu_446_p3;
reg   [15:0] select_ln1148_reg_840;
reg   [15:0] trunc_ln1148_s_reg_845;
reg  signed [15:0] p_Val2_14_reg_850;
reg  signed [15:0] p_Val2_15_reg_855;
wire   [15:0] select_ln1148_2_fu_475_p3;
reg   [15:0] select_ln1148_2_reg_860;
wire  signed [30:0] sext_ln1118_fu_481_p1;
reg  signed [30:0] sext_ln1118_reg_865;
wire  signed [30:0] sext_ln1118_1_fu_484_p1;
wire  signed [30:0] sext_ln1118_2_fu_487_p1;
reg  signed [30:0] sext_ln1118_2_reg_877;
wire  signed [30:0] sext_ln1118_3_fu_490_p1;
reg   [15:0] trunc_ln1148_1_reg_889;
reg   [15:0] trunc_ln1148_4_reg_894;
wire  signed [30:0] grp_fu_634_p2;
reg  signed [30:0] mul_ln700_reg_899;
wire  signed [30:0] grp_fu_640_p2;
reg  signed [30:0] mul_ln1192_reg_904;
wire   [15:0] sub_ln1148_1_fu_531_p2;
reg   [15:0] sub_ln1148_1_reg_909;
wire   [15:0] sub_ln1148_3_fu_536_p2;
reg   [15:0] sub_ln1148_3_reg_914;
wire  signed [30:0] grp_fu_646_p3;
reg  signed [30:0] ret_V_4_reg_919;
reg    ap_enable_reg_pp0_iter9;
wire  signed [30:0] grp_fu_652_p3;
reg  signed [30:0] ret_V_5_reg_924;
wire   [15:0] cdata_M_real_V_fu_541_p2;
reg   [15:0] cdata_M_real_V_reg_929;
wire   [15:0] sub_ln703_fu_545_p2;
reg   [15:0] sub_ln703_reg_934;
wire   [15:0] cdata_M_real_V_1_fu_613_p2;
reg   [15:0] cdata_M_real_V_1_reg_939;
wire   [15:0] add_ln703_1_fu_619_p2;
reg   [15:0] add_ln703_1_reg_944;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter10;
reg   [9:0] ap_phi_mux_i1_0_i_phi_fu_221_p4;
reg   [15:0] ap_phi_mux_tmp_M_real_V_phi_fu_232_p4;
wire   [15:0] ap_phi_reg_pp0_iter0_tmp_M_real_V_reg_229;
reg   [15:0] ap_phi_reg_pp0_iter1_tmp_M_real_V_reg_229;
reg   [15:0] ap_phi_reg_pp0_iter2_tmp_M_real_V_reg_229;
reg   [15:0] ap_phi_reg_pp0_iter3_tmp_M_real_V_reg_229;
reg   [15:0] ap_phi_reg_pp0_iter4_tmp_M_real_V_reg_229;
reg   [15:0] ap_phi_reg_pp0_iter5_tmp_M_real_V_reg_229;
reg   [15:0] ap_phi_reg_pp0_iter6_tmp_M_real_V_reg_229;
reg   [15:0] ap_phi_reg_pp0_iter7_tmp_M_real_V_reg_229;
reg   [15:0] ap_phi_reg_pp0_iter8_tmp_M_real_V_reg_229;
reg   [15:0] ap_phi_reg_pp0_iter9_tmp_M_real_V_reg_229;
reg   [15:0] ap_phi_reg_pp0_iter10_tmp_M_real_V_reg_229;
reg   [15:0] ap_phi_reg_pp0_iter11_tmp_M_real_V_reg_229;
reg   [15:0] ap_phi_mux_cdata_M_imag_V_phi_fu_241_p4;
wire   [15:0] ap_phi_reg_pp0_iter0_cdata_M_imag_V_reg_238;
reg   [15:0] ap_phi_reg_pp0_iter1_cdata_M_imag_V_reg_238;
reg   [15:0] ap_phi_reg_pp0_iter2_cdata_M_imag_V_reg_238;
reg   [15:0] ap_phi_reg_pp0_iter3_cdata_M_imag_V_reg_238;
reg   [15:0] ap_phi_reg_pp0_iter4_cdata_M_imag_V_reg_238;
reg   [15:0] ap_phi_reg_pp0_iter5_cdata_M_imag_V_reg_238;
reg   [15:0] ap_phi_reg_pp0_iter6_cdata_M_imag_V_reg_238;
reg   [15:0] ap_phi_reg_pp0_iter7_cdata_M_imag_V_reg_238;
reg   [15:0] ap_phi_reg_pp0_iter8_cdata_M_imag_V_reg_238;
reg   [15:0] ap_phi_reg_pp0_iter9_cdata_M_imag_V_reg_238;
reg   [15:0] ap_phi_reg_pp0_iter10_cdata_M_imag_V_reg_238;
reg   [15:0] ap_phi_reg_pp0_iter11_cdata_M_imag_V_reg_238;
wire   [63:0] zext_ln99_fu_292_p1;
wire   [63:0] zext_ln1265_fu_327_p1;
wire    ap_block_pp0_stage0_01001;
wire   [9:0] sub_ln104_fu_265_p2;
wire   [7:0] trunc_ln99_fu_288_p1;
wire   [1:0] tmp_fu_300_p4;
wire   [15:0] p_Val2_2_fu_316_p3;
wire   [15:0] p_Val2_3_fu_343_p3;
wire  signed [16:0] lhs_V_fu_355_p1;
wire  signed [16:0] rhs_V_fu_348_p1;
wire  signed [16:0] lhs_V_4_fu_371_p1;
wire  signed [16:0] rhs_V_3_fu_352_p1;
wire   [16:0] r_V_fu_418_p2;
wire   [0:0] tmp_6_fu_423_p3;
wire   [15:0] sub_ln1148_4_fu_431_p2;
wire   [15:0] trunc_ln1148_8_fu_436_p4;
wire   [17:0] zext_ln1148_2_fu_415_p1;
wire   [17:0] sub_ln1148_5_fu_454_p2;
wire   [15:0] sub_ln1148_6_fu_470_p2;
wire   [17:0] zext_ln1148_fu_493_p1;
wire   [17:0] sub_ln1148_fu_496_p2;
wire   [17:0] zext_ln1148_1_fu_512_p1;
wire   [17:0] sub_ln1148_2_fu_515_p2;
wire   [0:0] tmp_4_fu_549_p3;
wire   [15:0] trunc_ln1148_2_fu_556_p4;
wire   [0:0] tmp_5_fu_572_p3;
wire   [15:0] trunc_ln1148_5_fu_579_p4;
wire   [15:0] f_M_real_V_fu_565_p3;
wire   [15:0] p_r_V_fu_595_p4;
wire   [15:0] f_M_imag_V_fu_588_p3;
wire   [15:0] p_Val2_13_fu_604_p4;
wire  signed [15:0] grp_fu_634_p1;
wire  signed [15:0] grp_fu_640_p0;
wire  signed [15:0] grp_fu_646_p0;
wire  signed [15:0] grp_fu_646_p1;
wire  signed [15:0] grp_fu_652_p0;
wire  signed [15:0] grp_fu_652_p1;
reg    grp_fu_634_ce;
reg    grp_fu_640_ce;
reg    grp_fu_646_ce;
reg    grp_fu_652_ce;
wire    ap_CS_fsm_state15;
wire    regslice_both_dout_V_U_apdone_blk;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [31:0] dout_V_TDATA_int;
reg    dout_V_TVALID_int;
wire    dout_V_TREADY_int;
wire    regslice_both_dout_V_U_vld_out;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
end

Loop_realfft_be_dbkb #(
    .DataWidth( 16 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
twid_rom_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(twid_rom_0_address0),
    .ce0(twid_rom_0_ce0),
    .q0(twid_rom_0_q0)
);

Loop_realfft_be_dcud #(
    .DataWidth( 16 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
twid_rom_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(twid_rom_1_address0),
    .ce0(twid_rom_1_ce0),
    .q0(twid_rom_1_q0)
);

hls_xfft2real_muldEe #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 31 ))
hls_xfft2real_muldEe_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_Val2_14_reg_850),
    .din1(grp_fu_634_p1),
    .ce(grp_fu_634_ce),
    .dout(grp_fu_634_p2)
);

hls_xfft2real_muldEe #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 31 ))
hls_xfft2real_muldEe_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_640_p0),
    .din1(p_Val2_15_reg_855),
    .ce(grp_fu_640_ce),
    .dout(grp_fu_640_p2)
);

hls_xfft2real_maceOg #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
hls_xfft2real_maceOg_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_646_p0),
    .din1(grp_fu_646_p1),
    .din2(mul_ln700_reg_899),
    .ce(grp_fu_646_ce),
    .dout(grp_fu_646_p3)
);

hls_xfft2real_macfYi #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
hls_xfft2real_macfYi_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_652_p0),
    .din1(grp_fu_652_p1),
    .din2(mul_ln1192_reg_904),
    .ce(grp_fu_652_ce),
    .dout(grp_fu_652_p3)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_dout_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(dout_V_TDATA_int),
    .vld_in(dout_V_TVALID_int),
    .ack_in(dout_V_TREADY_int),
    .data_out(dout_V_TDATA),
    .vld_out(regslice_both_dout_V_U_vld_out),
    .ack_out(dout_V_TREADY),
    .apdone_blk(regslice_both_dout_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((regslice_both_dout_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state15))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter12 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln80_reg_658_pp0_iter9_reg == 1'd0) & (icmp_ln101_reg_667_pp0_iter9_reg == 1'd1))) begin
            ap_phi_reg_pp0_iter11_cdata_M_imag_V_reg_238 <= sub_ln703_reg_934;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter11_cdata_M_imag_V_reg_238 <= ap_phi_reg_pp0_iter10_cdata_M_imag_V_reg_238;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln80_reg_658_pp0_iter9_reg == 1'd0) & (icmp_ln101_reg_667_pp0_iter9_reg == 1'd1))) begin
            ap_phi_reg_pp0_iter11_tmp_M_real_V_reg_229 <= cdata_M_real_V_reg_929;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter11_tmp_M_real_V_reg_229 <= ap_phi_reg_pp0_iter10_tmp_M_real_V_reg_229;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i1_0_i_reg_217 <= 10'd0;
    end else if (((icmp_ln80_reg_658 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i1_0_i_reg_217 <= i_reg_662;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln101_reg_667_pp0_iter9_reg == 1'd0) & (icmp_ln80_reg_658_pp0_iter9_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln703_1_reg_944 <= add_ln703_1_fu_619_p2;
        cdata_M_real_V_1_reg_939 <= cdata_M_real_V_1_fu_613_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter10_cdata_M_imag_V_reg_238 <= ap_phi_reg_pp0_iter9_cdata_M_imag_V_reg_238;
        ap_phi_reg_pp0_iter10_tmp_M_real_V_reg_229 <= ap_phi_reg_pp0_iter9_tmp_M_real_V_reg_229;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_cdata_M_imag_V_reg_238 <= ap_phi_reg_pp0_iter0_cdata_M_imag_V_reg_238;
        ap_phi_reg_pp0_iter1_tmp_M_real_V_reg_229 <= ap_phi_reg_pp0_iter0_tmp_M_real_V_reg_229;
        i_reg_662 <= i_fu_253_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter2_cdata_M_imag_V_reg_238 <= ap_phi_reg_pp0_iter1_cdata_M_imag_V_reg_238;
        ap_phi_reg_pp0_iter2_tmp_M_real_V_reg_229 <= ap_phi_reg_pp0_iter1_tmp_M_real_V_reg_229;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter3_cdata_M_imag_V_reg_238 <= ap_phi_reg_pp0_iter2_cdata_M_imag_V_reg_238;
        ap_phi_reg_pp0_iter3_tmp_M_real_V_reg_229 <= ap_phi_reg_pp0_iter2_tmp_M_real_V_reg_229;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter4_cdata_M_imag_V_reg_238 <= ap_phi_reg_pp0_iter3_cdata_M_imag_V_reg_238;
        ap_phi_reg_pp0_iter4_tmp_M_real_V_reg_229 <= ap_phi_reg_pp0_iter3_tmp_M_real_V_reg_229;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter5_cdata_M_imag_V_reg_238 <= ap_phi_reg_pp0_iter4_cdata_M_imag_V_reg_238;
        ap_phi_reg_pp0_iter5_tmp_M_real_V_reg_229 <= ap_phi_reg_pp0_iter4_tmp_M_real_V_reg_229;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter6_cdata_M_imag_V_reg_238 <= ap_phi_reg_pp0_iter5_cdata_M_imag_V_reg_238;
        ap_phi_reg_pp0_iter6_tmp_M_real_V_reg_229 <= ap_phi_reg_pp0_iter5_tmp_M_real_V_reg_229;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter7_cdata_M_imag_V_reg_238 <= ap_phi_reg_pp0_iter6_cdata_M_imag_V_reg_238;
        ap_phi_reg_pp0_iter7_tmp_M_real_V_reg_229 <= ap_phi_reg_pp0_iter6_tmp_M_real_V_reg_229;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter8_cdata_M_imag_V_reg_238 <= ap_phi_reg_pp0_iter7_cdata_M_imag_V_reg_238;
        ap_phi_reg_pp0_iter8_tmp_M_real_V_reg_229 <= ap_phi_reg_pp0_iter7_tmp_M_real_V_reg_229;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter9_cdata_M_imag_V_reg_238 <= ap_phi_reg_pp0_iter8_cdata_M_imag_V_reg_238;
        ap_phi_reg_pp0_iter9_tmp_M_real_V_reg_229 <= ap_phi_reg_pp0_iter8_tmp_M_real_V_reg_229;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln80_reg_658_pp0_iter8_reg == 1'd0) & (icmp_ln101_reg_667_pp0_iter8_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        cdata_M_real_V_reg_929 <= cdata_M_real_V_fu_541_p2;
        sub_ln703_reg_934 <= sub_ln703_fu_545_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln80_reg_658_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        descramble_buf_0_M_1_reg_744 <= descramble_buf_0_M_real_V_q0;
        descramble_buf_0_M_3_reg_754 <= descramble_buf_0_M_imag_V_q1;
        descramble_buf_1_M_1_reg_749 <= descramble_buf_1_M_real_V_q0;
        descramble_buf_1_M_3_reg_759 <= descramble_buf_1_M_imag_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_3_reg_676_pp0_iter2_reg == 1'd0) & (icmp_ln101_reg_667_pp0_iter2_reg == 1'd0) & (icmp_ln80_reg_658_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        descramble_buf_0_M_6_reg_764 <= descramble_buf_0_M_real_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_3_reg_676_pp0_iter1_reg == 1'd0) & (icmp_ln101_reg_667_pp0_iter1_reg == 1'd0) & (icmp_ln80_reg_658_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        descramble_buf_0_M_7_reg_728 <= descramble_buf_0_M_imag_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln101_reg_667_pp0_iter2_reg == 1'd0) & (icmp_ln80_reg_658_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (tmp_3_reg_676_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        descramble_buf_1_M_6_reg_769 <= descramble_buf_1_M_real_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln101_reg_667_pp0_iter1_reg == 1'd0) & (icmp_ln80_reg_658_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_3_reg_676_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        descramble_buf_1_M_7_reg_733 <= descramble_buf_1_M_imag_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i1_0_i_reg_217_pp0_iter1_reg <= i1_0_i_reg_217;
        icmp_ln101_reg_667_pp0_iter1_reg <= icmp_ln101_reg_667;
        icmp_ln80_reg_658 <= icmp_ln80_fu_247_p2;
        icmp_ln80_reg_658_pp0_iter1_reg <= icmp_ln80_reg_658;
        tmp_3_reg_676_pp0_iter1_reg <= tmp_3_reg_676;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        i1_0_i_reg_217_pp0_iter2_reg <= i1_0_i_reg_217_pp0_iter1_reg;
        i1_0_i_reg_217_pp0_iter3_reg <= i1_0_i_reg_217_pp0_iter2_reg;
        icmp_ln101_reg_667_pp0_iter10_reg <= icmp_ln101_reg_667_pp0_iter9_reg;
        icmp_ln101_reg_667_pp0_iter2_reg <= icmp_ln101_reg_667_pp0_iter1_reg;
        icmp_ln101_reg_667_pp0_iter3_reg <= icmp_ln101_reg_667_pp0_iter2_reg;
        icmp_ln101_reg_667_pp0_iter4_reg <= icmp_ln101_reg_667_pp0_iter3_reg;
        icmp_ln101_reg_667_pp0_iter5_reg <= icmp_ln101_reg_667_pp0_iter4_reg;
        icmp_ln101_reg_667_pp0_iter6_reg <= icmp_ln101_reg_667_pp0_iter5_reg;
        icmp_ln101_reg_667_pp0_iter7_reg <= icmp_ln101_reg_667_pp0_iter6_reg;
        icmp_ln101_reg_667_pp0_iter8_reg <= icmp_ln101_reg_667_pp0_iter7_reg;
        icmp_ln101_reg_667_pp0_iter9_reg <= icmp_ln101_reg_667_pp0_iter8_reg;
        icmp_ln80_reg_658_pp0_iter10_reg <= icmp_ln80_reg_658_pp0_iter9_reg;
        icmp_ln80_reg_658_pp0_iter11_reg <= icmp_ln80_reg_658_pp0_iter10_reg;
        icmp_ln80_reg_658_pp0_iter2_reg <= icmp_ln80_reg_658_pp0_iter1_reg;
        icmp_ln80_reg_658_pp0_iter3_reg <= icmp_ln80_reg_658_pp0_iter2_reg;
        icmp_ln80_reg_658_pp0_iter4_reg <= icmp_ln80_reg_658_pp0_iter3_reg;
        icmp_ln80_reg_658_pp0_iter5_reg <= icmp_ln80_reg_658_pp0_iter4_reg;
        icmp_ln80_reg_658_pp0_iter6_reg <= icmp_ln80_reg_658_pp0_iter5_reg;
        icmp_ln80_reg_658_pp0_iter7_reg <= icmp_ln80_reg_658_pp0_iter6_reg;
        icmp_ln80_reg_658_pp0_iter8_reg <= icmp_ln80_reg_658_pp0_iter7_reg;
        icmp_ln80_reg_658_pp0_iter9_reg <= icmp_ln80_reg_658_pp0_iter8_reg;
        p_Val2_1_reg_785_pp0_iter5_reg <= p_Val2_1_reg_785;
        p_Val2_1_reg_785_pp0_iter6_reg <= p_Val2_1_reg_785_pp0_iter5_reg;
        p_Val2_1_reg_785_pp0_iter7_reg <= p_Val2_1_reg_785_pp0_iter6_reg;
        p_Val2_1_reg_785_pp0_iter8_reg <= p_Val2_1_reg_785_pp0_iter7_reg;
        p_Val2_s_reg_779_pp0_iter5_reg <= p_Val2_s_reg_779;
        p_Val2_s_reg_779_pp0_iter6_reg <= p_Val2_s_reg_779_pp0_iter5_reg;
        p_Val2_s_reg_779_pp0_iter7_reg <= p_Val2_s_reg_779_pp0_iter6_reg;
        p_Val2_s_reg_779_pp0_iter8_reg <= p_Val2_s_reg_779_pp0_iter7_reg;
        ret_V_1_reg_803_pp0_iter5_reg <= ret_V_1_reg_803;
        ret_V_1_reg_803_pp0_iter6_reg <= ret_V_1_reg_803_pp0_iter5_reg;
        ret_V_1_reg_803_pp0_iter7_reg <= ret_V_1_reg_803_pp0_iter6_reg;
        ret_V_1_reg_803_pp0_iter8_reg <= ret_V_1_reg_803_pp0_iter7_reg;
        ret_V_1_reg_803_pp0_iter9_reg <= ret_V_1_reg_803_pp0_iter8_reg;
        ret_V_reg_791_pp0_iter5_reg <= ret_V_reg_791;
        ret_V_reg_791_pp0_iter6_reg <= ret_V_reg_791_pp0_iter5_reg;
        ret_V_reg_791_pp0_iter7_reg <= ret_V_reg_791_pp0_iter6_reg;
        ret_V_reg_791_pp0_iter8_reg <= ret_V_reg_791_pp0_iter7_reg;
        ret_V_reg_791_pp0_iter9_reg <= ret_V_reg_791_pp0_iter8_reg;
        tmp_3_reg_676_pp0_iter2_reg <= tmp_3_reg_676_pp0_iter1_reg;
        tmp_3_reg_676_pp0_iter3_reg <= tmp_3_reg_676_pp0_iter2_reg;
        tmp_7_reg_820_pp0_iter5_reg <= tmp_7_reg_820;
        trunc_ln1148_3_reg_825_pp0_iter5_reg <= trunc_ln1148_3_reg_825;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln80_fu_247_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln101_reg_667 <= icmp_ln101_fu_259_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln80_reg_658_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln99_reg_738 <= icmp_ln99_fu_310_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln101_reg_667_pp0_iter7_reg == 1'd0) & (icmp_ln80_reg_658_pp0_iter7_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_ln1192_reg_904 <= grp_fu_640_p2;
        mul_ln700_reg_899 <= grp_fu_634_p2;
        trunc_ln1148_1_reg_889 <= {{sub_ln1148_fu_496_p2[16:1]}};
        trunc_ln1148_4_reg_894 <= {{sub_ln1148_2_fu_515_p2[16:1]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln101_reg_667_pp0_iter4_reg == 1'd0) & (icmp_ln80_reg_658_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_14_reg_850 <= twid_rom_0_q0;
        p_Val2_15_reg_855 <= twid_rom_1_q0;
        select_ln1148_reg_840 <= select_ln1148_fu_446_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln80_reg_658_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_1_reg_785 <= p_Val2_1_fu_338_p3;
        p_Val2_s_reg_779 <= p_Val2_s_fu_333_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln101_reg_667_pp0_iter2_reg == 1'd0) & (icmp_ln80_reg_658_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_4_reg_774 <= p_Val2_4_fu_321_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln101_reg_667_pp0_iter3_reg == 1'd0) & (icmp_ln80_reg_658_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ret_V_1_reg_803 <= ret_V_1_fu_375_p2;
        ret_V_2_reg_810 <= ret_V_2_fu_381_p2;
        ret_V_3_reg_798 <= ret_V_3_fu_365_p2;
        ret_V_reg_791 <= ret_V_fu_359_p2;
        tmp_7_reg_820 <= ret_V_3_fu_365_p2[32'd16];
        trunc_ln1148_3_reg_825 <= {{ret_V_3_fu_365_p2[16:1]}};
        trunc_ln1148_7_reg_815 <= {{ret_V_2_fu_381_p2[16:1]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln101_reg_667_pp0_iter8_reg == 1'd0) & (icmp_ln80_reg_658_pp0_iter8_reg == 1'd0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ret_V_4_reg_919 <= grp_fu_646_p3;
        ret_V_5_reg_924 <= grp_fu_652_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln101_reg_667_pp0_iter5_reg == 1'd0) & (icmp_ln80_reg_658_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln1148_2_reg_860 <= select_ln1148_2_fu_475_p3;
        sext_ln1118_2_reg_877 <= sext_ln1118_2_fu_487_p1;
        sext_ln1118_reg_865 <= sext_ln1118_fu_481_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln101_reg_667_pp0_iter8_reg == 1'd0) & (icmp_ln80_reg_658_pp0_iter8_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sub_ln1148_1_reg_909 <= sub_ln1148_1_fu_531_p2;
        sub_ln1148_3_reg_914 <= sub_ln1148_3_fu_536_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln101_fu_259_p2 == 1'd0) & (icmp_ln80_fu_247_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_3_reg_676 <= sub_ln104_fu_265_p2[32'd8];
        trunc_ln104_reg_671 <= trunc_ln104_fu_271_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln101_reg_667_pp0_iter4_reg == 1'd0) & (icmp_ln80_reg_658_pp0_iter4_reg == 1'd0) & (tmp_7_reg_820 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        trunc_ln1148_s_reg_845 <= {{sub_ln1148_5_fu_454_p2[16:1]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln101_reg_667 == 1'd0) & (icmp_ln80_reg_658 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zext_ln104_reg_682[7 : 0] <= zext_ln104_fu_283_p1[7 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln80_fu_247_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((regslice_both_dout_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state15))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln101_reg_667_pp0_iter10_reg == 1'd0) & (icmp_ln80_reg_658_pp0_iter10_reg == 1'd0))) begin
        ap_phi_mux_cdata_M_imag_V_phi_fu_241_p4 = add_ln703_1_reg_944;
    end else begin
        ap_phi_mux_cdata_M_imag_V_phi_fu_241_p4 = ap_phi_reg_pp0_iter11_cdata_M_imag_V_reg_238;
    end
end

always @ (*) begin
    if (((icmp_ln80_reg_658 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i1_0_i_phi_fu_221_p4 = i_reg_662;
    end else begin
        ap_phi_mux_i1_0_i_phi_fu_221_p4 = i1_0_i_reg_217;
    end
end

always @ (*) begin
    if (((icmp_ln101_reg_667_pp0_iter10_reg == 1'd0) & (icmp_ln80_reg_658_pp0_iter10_reg == 1'd0))) begin
        ap_phi_mux_tmp_M_real_V_phi_fu_232_p4 = cdata_M_real_V_1_reg_939;
    end else begin
        ap_phi_mux_tmp_M_real_V_phi_fu_232_p4 = ap_phi_reg_pp0_iter11_tmp_M_real_V_reg_229;
    end
end

always @ (*) begin
    if (((regslice_both_dout_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state15))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        descramble_buf_0_M_imag_V_ce0 = 1'b1;
    end else begin
        descramble_buf_0_M_imag_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        descramble_buf_0_M_imag_V_ce1 = 1'b1;
    end else begin
        descramble_buf_0_M_imag_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        descramble_buf_0_M_real_V_ce0 = 1'b1;
    end else begin
        descramble_buf_0_M_real_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        descramble_buf_0_M_real_V_ce1 = 1'b1;
    end else begin
        descramble_buf_0_M_real_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        descramble_buf_1_M_imag_V_ce0 = 1'b1;
    end else begin
        descramble_buf_1_M_imag_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        descramble_buf_1_M_imag_V_ce1 = 1'b1;
    end else begin
        descramble_buf_1_M_imag_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        descramble_buf_1_M_real_V_ce0 = 1'b1;
    end else begin
        descramble_buf_1_M_real_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        descramble_buf_1_M_real_V_ce1 = 1'b1;
    end else begin
        descramble_buf_1_M_real_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln80_reg_658_pp0_iter11_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter12 == 1'b1)) | ((icmp_ln80_reg_658_pp0_iter10_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter11 == 1'b1)))) begin
        dout_V_TDATA_blk_n = dout_V_TREADY_int;
    end else begin
        dout_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln80_reg_658_pp0_iter10_reg == 1'd0) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dout_V_TVALID_int = 1'b1;
    end else begin
        dout_V_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_634_ce = 1'b1;
    end else begin
        grp_fu_634_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_640_ce = 1'b1;
    end else begin
        grp_fu_640_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_646_ce = 1'b1;
    end else begin
        grp_fu_646_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_652_ce = 1'b1;
    end else begin
        grp_fu_652_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        twid_rom_0_ce0 = 1'b1;
    end else begin
        twid_rom_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        twid_rom_1_ce0 = 1'b1;
    end else begin
        twid_rom_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln80_fu_247_p2 == 1'd1)) & ~((ap_enable_reg_pp0_iter11 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter12 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter11 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter12 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln80_fu_247_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((regslice_both_dout_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln703_1_fu_619_p2 = (f_M_imag_V_fu_588_p3 + p_Val2_13_fu_604_p4);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((1'b1 == ap_block_state14_io) & (ap_enable_reg_pp0_iter12 == 1'b1)) | ((1'b1 == ap_block_state13_io) & (ap_enable_reg_pp0_iter11 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((1'b1 == ap_block_state14_io) & (ap_enable_reg_pp0_iter12 == 1'b1)) | ((1'b1 == ap_block_state13_io) & (ap_enable_reg_pp0_iter11 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state13_io = ((icmp_ln80_reg_658_pp0_iter10_reg == 1'd0) & (dout_V_TREADY_int == 1'b0));
end

assign ap_block_state13_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state14_io = ((icmp_ln80_reg_658_pp0_iter11_reg == 1'd0) & (dout_V_TREADY_int == 1'b0));
end

assign ap_block_state14_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_cdata_M_imag_V_reg_238 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_M_real_V_reg_229 = 'bx;

assign cdata_M_real_V_1_fu_613_p2 = (f_M_real_V_fu_565_p3 + p_r_V_fu_595_p4);

assign cdata_M_real_V_fu_541_p2 = ($signed(p_Val2_1_reg_785_pp0_iter8_reg) + $signed(p_Val2_s_reg_779_pp0_iter8_reg));

assign descramble_buf_0_M_imag_V_address0 = zext_ln104_fu_283_p1;

assign descramble_buf_0_M_imag_V_address1 = zext_ln99_fu_292_p1;

assign descramble_buf_0_M_real_V_address0 = zext_ln99_fu_292_p1;

assign descramble_buf_0_M_real_V_address1 = zext_ln104_reg_682;

assign descramble_buf_1_M_imag_V_address0 = zext_ln104_fu_283_p1;

assign descramble_buf_1_M_imag_V_address1 = zext_ln99_fu_292_p1;

assign descramble_buf_1_M_real_V_address0 = zext_ln99_fu_292_p1;

assign descramble_buf_1_M_real_V_address1 = zext_ln104_reg_682;

assign dout_V_TDATA_int = {{ap_phi_mux_cdata_M_imag_V_phi_fu_241_p4}, {ap_phi_mux_tmp_M_real_V_phi_fu_232_p4}};

assign dout_V_TVALID = regslice_both_dout_V_U_vld_out;

assign f_M_imag_V_fu_588_p3 = ((tmp_5_fu_572_p3[0:0] === 1'b1) ? sub_ln1148_3_reg_914 : trunc_ln1148_5_fu_579_p4);

assign f_M_real_V_fu_565_p3 = ((tmp_4_fu_549_p3[0:0] === 1'b1) ? sub_ln1148_1_reg_909 : trunc_ln1148_2_fu_556_p4);

assign grp_fu_634_p1 = sext_ln1118_1_fu_484_p1;

assign grp_fu_640_p0 = sext_ln1118_1_fu_484_p1;

assign grp_fu_646_p0 = sext_ln1118_2_reg_877;

assign grp_fu_646_p1 = sext_ln1118_3_fu_490_p1;

assign grp_fu_652_p0 = sext_ln1118_reg_865;

assign grp_fu_652_p1 = sext_ln1118_3_fu_490_p1;

assign i_fu_253_p2 = (ap_phi_mux_i1_0_i_phi_fu_221_p4 + 10'd1);

assign icmp_ln101_fu_259_p2 = ((ap_phi_mux_i1_0_i_phi_fu_221_p4 == 10'd0) ? 1'b1 : 1'b0);

assign icmp_ln80_fu_247_p2 = ((ap_phi_mux_i1_0_i_phi_fu_221_p4 == 10'd512) ? 1'b1 : 1'b0);

assign icmp_ln99_fu_310_p2 = ((tmp_fu_300_p4 == 2'd0) ? 1'b1 : 1'b0);

assign lhs_V_4_fu_371_p1 = p_Val2_1_fu_338_p3;

assign lhs_V_fu_355_p1 = p_Val2_s_fu_333_p3;

assign p_Val2_13_fu_604_p4 = {{ret_V_5_reg_924[30:15]}};

assign p_Val2_1_fu_338_p3 = ((icmp_ln99_reg_738[0:0] === 1'b1) ? descramble_buf_0_M_3_reg_754 : descramble_buf_1_M_3_reg_759);

assign p_Val2_2_fu_316_p3 = ((tmp_3_reg_676_pp0_iter2_reg[0:0] === 1'b1) ? descramble_buf_1_M_7_reg_733 : descramble_buf_0_M_7_reg_728);

assign p_Val2_3_fu_343_p3 = ((tmp_3_reg_676_pp0_iter3_reg[0:0] === 1'b1) ? descramble_buf_1_M_6_reg_769 : descramble_buf_0_M_6_reg_764);

assign p_Val2_4_fu_321_p2 = (16'd0 - p_Val2_2_fu_316_p3);

assign p_Val2_s_fu_333_p3 = ((icmp_ln99_reg_738[0:0] === 1'b1) ? descramble_buf_0_M_1_reg_744 : descramble_buf_1_M_1_reg_749);

assign p_r_V_fu_595_p4 = {{ret_V_4_reg_919[30:15]}};

assign r_V_fu_418_p2 = (17'd0 - ret_V_2_reg_810);

assign ret_V_1_fu_375_p2 = ($signed(lhs_V_4_fu_371_p1) + $signed(rhs_V_3_fu_352_p1));

assign ret_V_2_fu_381_p2 = ($signed(rhs_V_3_fu_352_p1) - $signed(lhs_V_4_fu_371_p1));

assign ret_V_3_fu_365_p2 = ($signed(rhs_V_fu_348_p1) - $signed(lhs_V_fu_355_p1));

assign ret_V_fu_359_p2 = ($signed(lhs_V_fu_355_p1) + $signed(rhs_V_fu_348_p1));

assign rhs_V_3_fu_352_p1 = $signed(p_Val2_4_reg_774);

assign rhs_V_fu_348_p1 = $signed(p_Val2_3_fu_343_p3);

assign select_ln1148_2_fu_475_p3 = ((tmp_7_reg_820_pp0_iter5_reg[0:0] === 1'b1) ? sub_ln1148_6_fu_470_p2 : trunc_ln1148_3_reg_825_pp0_iter5_reg);

assign select_ln1148_fu_446_p3 = ((tmp_6_fu_423_p3[0:0] === 1'b1) ? sub_ln1148_4_fu_431_p2 : trunc_ln1148_8_fu_436_p4);

assign sext_ln1118_1_fu_484_p1 = $signed(select_ln1148_reg_840);

assign sext_ln1118_2_fu_487_p1 = p_Val2_15_reg_855;

assign sext_ln1118_3_fu_490_p1 = $signed(select_ln1148_2_reg_860);

assign sext_ln1118_fu_481_p1 = p_Val2_14_reg_850;

assign sub_ln104_fu_265_p2 = ($signed(10'd512) - $signed(ap_phi_mux_i1_0_i_phi_fu_221_p4));

assign sub_ln1148_1_fu_531_p2 = (16'd0 - trunc_ln1148_1_reg_889);

assign sub_ln1148_2_fu_515_p2 = (18'd0 - zext_ln1148_1_fu_512_p1);

assign sub_ln1148_3_fu_536_p2 = (16'd0 - trunc_ln1148_4_reg_894);

assign sub_ln1148_4_fu_431_p2 = (16'd0 - trunc_ln1148_7_reg_815);

assign sub_ln1148_5_fu_454_p2 = (18'd0 - zext_ln1148_2_fu_415_p1);

assign sub_ln1148_6_fu_470_p2 = (16'd0 - trunc_ln1148_s_reg_845);

assign sub_ln1148_fu_496_p2 = (18'd0 - zext_ln1148_fu_493_p1);

assign sub_ln703_fu_545_p2 = ($signed(p_Val2_s_reg_779_pp0_iter8_reg) - $signed(p_Val2_1_reg_785_pp0_iter8_reg));

assign tmp_4_fu_549_p3 = ret_V_reg_791_pp0_iter9_reg[32'd16];

assign tmp_5_fu_572_p3 = ret_V_1_reg_803_pp0_iter9_reg[32'd16];

assign tmp_6_fu_423_p3 = r_V_fu_418_p2[32'd16];

assign tmp_fu_300_p4 = {{i1_0_i_reg_217_pp0_iter2_reg[9:8]}};

assign trunc_ln104_fu_271_p1 = sub_ln104_fu_265_p2[7:0];

assign trunc_ln1148_2_fu_556_p4 = {{ret_V_reg_791_pp0_iter9_reg[16:1]}};

assign trunc_ln1148_5_fu_579_p4 = {{ret_V_1_reg_803_pp0_iter9_reg[16:1]}};

assign trunc_ln1148_8_fu_436_p4 = {{r_V_fu_418_p2[16:1]}};

assign trunc_ln99_fu_288_p1 = i1_0_i_reg_217_pp0_iter1_reg[7:0];

assign twid_rom_0_address0 = zext_ln1265_fu_327_p1;

assign twid_rom_1_address0 = zext_ln1265_fu_327_p1;

assign zext_ln104_fu_283_p1 = trunc_ln104_reg_671;

assign zext_ln1148_1_fu_512_p1 = ret_V_1_reg_803_pp0_iter7_reg;

assign zext_ln1148_2_fu_415_p1 = ret_V_3_reg_798;

assign zext_ln1148_fu_493_p1 = ret_V_reg_791_pp0_iter7_reg;

assign zext_ln1265_fu_327_p1 = i1_0_i_reg_217_pp0_iter3_reg;

assign zext_ln99_fu_292_p1 = trunc_ln99_fu_288_p1;

always @ (posedge ap_clk) begin
    zext_ln104_reg_682[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
end

endmodule //Loop_realfft_be_desc
