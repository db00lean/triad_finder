// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max_HH_
#define _max_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct max : public sc_module {
    // Port declarations 20
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_lv<16> > y_TDATA;
    sc_out< sc_logic > y_TVALID;
    sc_in< sc_logic > y_TREADY;
    sc_out< sc_lv<2> > y_TKEEP;
    sc_out< sc_lv<2> > y_TSTRB;
    sc_out< sc_lv<1> > y_TUSER;
    sc_out< sc_lv<1> > y_TLAST;
    sc_out< sc_lv<1> > y_TID;
    sc_out< sc_lv<1> > y_TDEST;
    sc_in< sc_lv<16> > x_TDATA;
    sc_in< sc_logic > x_TVALID;
    sc_out< sc_logic > x_TREADY;
    sc_in< sc_lv<2> > x_TKEEP;
    sc_in< sc_lv<2> > x_TSTRB;
    sc_in< sc_lv<1> > x_TUSER;
    sc_in< sc_lv<1> > x_TLAST;
    sc_in< sc_lv<1> > x_TID;
    sc_in< sc_lv<1> > x_TDEST;


    // Module declarations
    max(sc_module_name name);
    SC_HAS_PROCESS(max);

    ~max();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    regslice_both<16>* regslice_both_y_data_V_U;
    regslice_both<2>* regslice_both_y_keep_V_U;
    regslice_both<2>* regslice_both_y_strb_V_U;
    regslice_both<1>* regslice_both_y_user_V_U;
    regslice_both<1>* regslice_both_y_last_V_U;
    regslice_both<1>* regslice_both_y_id_V_U;
    regslice_both<1>* regslice_both_y_dest_V_U;
    regslice_both<16>* regslice_both_x_data_V_U;
    regslice_both<2>* regslice_both_x_keep_V_U;
    regslice_both<2>* regslice_both_x_strb_V_U;
    regslice_both<1>* regslice_both_x_user_V_U;
    regslice_both<1>* regslice_both_x_last_V_U;
    regslice_both<1>* regslice_both_x_id_V_U;
    regslice_both<1>* regslice_both_x_dest_V_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<16> > max_value;
    sc_signal< sc_logic > y_TDATA_blk_n;
    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > x_TDATA_blk_n;
    sc_signal< sc_lv<16> > ap_phi_mux_y_data_V_tmp_0_phi_fu_103_p4;
    sc_signal< sc_lv<1> > icmp_ln887_fu_151_p2;
    sc_signal< sc_lv<2> > ap_NS_fsm;
    sc_signal< sc_logic > regslice_both_y_data_V_U_apdone_blk;
    sc_signal< sc_logic > y_TVALID_int;
    sc_signal< sc_logic > y_TREADY_int;
    sc_signal< sc_logic > regslice_both_y_data_V_U_vld_out;
    sc_signal< sc_logic > regslice_both_y_keep_V_U_apdone_blk;
    sc_signal< sc_logic > regslice_both_y_keep_V_U_ack_in_dummy;
    sc_signal< sc_logic > regslice_both_y_keep_V_U_vld_out;
    sc_signal< sc_logic > regslice_both_y_strb_V_U_apdone_blk;
    sc_signal< sc_logic > regslice_both_y_strb_V_U_ack_in_dummy;
    sc_signal< sc_logic > regslice_both_y_strb_V_U_vld_out;
    sc_signal< sc_logic > regslice_both_y_user_V_U_apdone_blk;
    sc_signal< sc_logic > regslice_both_y_user_V_U_ack_in_dummy;
    sc_signal< sc_logic > regslice_both_y_user_V_U_vld_out;
    sc_signal< sc_logic > regslice_both_y_last_V_U_apdone_blk;
    sc_signal< sc_logic > regslice_both_y_last_V_U_ack_in_dummy;
    sc_signal< sc_logic > regslice_both_y_last_V_U_vld_out;
    sc_signal< sc_logic > regslice_both_y_id_V_U_apdone_blk;
    sc_signal< sc_logic > regslice_both_y_id_V_U_ack_in_dummy;
    sc_signal< sc_logic > regslice_both_y_id_V_U_vld_out;
    sc_signal< sc_logic > regslice_both_y_dest_V_U_apdone_blk;
    sc_signal< sc_logic > regslice_both_y_dest_V_U_ack_in_dummy;
    sc_signal< sc_logic > regslice_both_y_dest_V_U_vld_out;
    sc_signal< sc_logic > regslice_both_x_data_V_U_apdone_blk;
    sc_signal< sc_lv<16> > x_TDATA_int;
    sc_signal< sc_logic > x_TVALID_int;
    sc_signal< sc_logic > x_TREADY_int;
    sc_signal< sc_logic > regslice_both_x_data_V_U_ack_in;
    sc_signal< sc_logic > regslice_both_x_keep_V_U_apdone_blk;
    sc_signal< sc_lv<2> > x_TKEEP_int;
    sc_signal< sc_logic > regslice_both_x_keep_V_U_vld_out;
    sc_signal< sc_logic > regslice_both_x_keep_V_U_ack_in;
    sc_signal< sc_logic > regslice_both_x_strb_V_U_apdone_blk;
    sc_signal< sc_lv<2> > x_TSTRB_int;
    sc_signal< sc_logic > regslice_both_x_strb_V_U_vld_out;
    sc_signal< sc_logic > regslice_both_x_strb_V_U_ack_in;
    sc_signal< sc_logic > regslice_both_x_user_V_U_apdone_blk;
    sc_signal< sc_lv<1> > x_TUSER_int;
    sc_signal< sc_logic > regslice_both_x_user_V_U_vld_out;
    sc_signal< sc_logic > regslice_both_x_user_V_U_ack_in;
    sc_signal< sc_logic > regslice_both_x_last_V_U_apdone_blk;
    sc_signal< sc_lv<1> > x_TLAST_int;
    sc_signal< sc_logic > regslice_both_x_last_V_U_vld_out;
    sc_signal< sc_logic > regslice_both_x_last_V_U_ack_in;
    sc_signal< sc_logic > regslice_both_x_id_V_U_apdone_blk;
    sc_signal< sc_lv<1> > x_TID_int;
    sc_signal< sc_logic > regslice_both_x_id_V_U_vld_out;
    sc_signal< sc_logic > regslice_both_x_id_V_U_ack_in;
    sc_signal< sc_logic > regslice_both_x_dest_V_U_apdone_blk;
    sc_signal< sc_lv<1> > x_TDEST_int;
    sc_signal< sc_logic > regslice_both_x_dest_V_U_vld_out;
    sc_signal< sc_logic > regslice_both_x_dest_V_U_ack_in;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_ST_fsm_state1;
    static const sc_lv<2> ap_ST_fsm_state2;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_phi_mux_y_data_V_tmp_0_phi_fu_103_p4();
    void thread_ap_rst_n_inv();
    void thread_icmp_ln887_fu_151_p2();
    void thread_x_TDATA_blk_n();
    void thread_x_TREADY();
    void thread_x_TREADY_int();
    void thread_y_TDATA_blk_n();
    void thread_y_TVALID();
    void thread_y_TVALID_int();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
