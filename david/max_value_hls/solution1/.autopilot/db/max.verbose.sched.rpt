

================================================================
== Vivado HLS Report for 'max'
================================================================
* Date:           Mon Apr  4 16:50:20 2022

* Version:        2020.1 (Build 2897737 on Wed May 27 20:21:37 MDT 2020)
* Project:        max_value
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 4.198 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        1|        1| 10.000 ns | 10.000 ns |    1|    1|   none  |
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 4.19>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i16* %y_data_V), !map !35"   --->   Operation 3 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i2* %y_keep_V), !map !41"   --->   Operation 4 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i2* %y_strb_V), !map !45"   --->   Operation 5 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %y_user_V), !map !49"   --->   Operation 6 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %y_last_V), !map !53"   --->   Operation 7 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %y_id_V), !map !57"   --->   Operation 8 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %y_dest_V), !map !61"   --->   Operation 9 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i16* %x_data_V), !map !65"   --->   Operation 10 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i2* %x_keep_V), !map !69"   --->   Operation 11 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i2* %x_strb_V), !map !73"   --->   Operation 12 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %x_user_V), !map !77"   --->   Operation 13 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %x_last_V), !map !81"   --->   Operation 14 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %x_id_V), !map !85"   --->   Operation 15 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %x_dest_V), !map !89"   --->   Operation 16 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([4 x i8]* @max_str) nounwind"   --->   Operation 17 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i16* %x_data_V, i2* %x_keep_V, i2* %x_strb_V, i1* %x_user_V, i1* %x_last_V, i1* %x_id_V, i1* %x_dest_V, [5 x i8]* @p_str, i32 1, i32 1, [5 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [max.cpp:12]   --->   Operation 18 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i16* %y_data_V, i2* %y_keep_V, i2* %y_strb_V, i1* %y_user_V, i1* %y_last_V, i1* %y_id_V, i1* %y_dest_V, [5 x i8]* @p_str, i32 1, i32 1, [5 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [max.cpp:13]   --->   Operation 19 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [13 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [max.cpp:14]   --->   Operation 20 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecReset(i16* @max_value, i32 1, [1 x i8]* @p_str2) nounwind" [max.cpp:16]   --->   Operation 21 'specreset' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%max_value_load = load i16* @max_value, align 2" [max.cpp:18]   --->   Operation 22 'load' 'max_value_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%empty = call { i16, i2, i2, i1, i1, i1, i1 } @_ssdm_op_Read.axis.volatile.i16P.i2P.i2P.i1P.i1P.i1P.i1P(i16* %x_data_V, i2* %x_keep_V, i2* %x_strb_V, i1* %x_user_V, i1* %x_last_V, i1* %x_id_V, i1* %x_dest_V)" [max.cpp:9]   --->   Operation 23 'read' 'empty' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%x_data_V_tmp = extractvalue { i16, i2, i2, i1, i1, i1, i1 } %empty, 0" [max.cpp:9]   --->   Operation 24 'extractvalue' 'x_data_V_tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%y_keep_V_tmp = extractvalue { i16, i2, i2, i1, i1, i1, i1 } %empty, 1" [max.cpp:9]   --->   Operation 25 'extractvalue' 'y_keep_V_tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%y_strb_V_tmp = extractvalue { i16, i2, i2, i1, i1, i1, i1 } %empty, 2" [max.cpp:9]   --->   Operation 26 'extractvalue' 'y_strb_V_tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%y_user_V_tmp = extractvalue { i16, i2, i2, i1, i1, i1, i1 } %empty, 3" [max.cpp:9]   --->   Operation 27 'extractvalue' 'y_user_V_tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%y_last_V_tmp = extractvalue { i16, i2, i2, i1, i1, i1, i1 } %empty, 4" [max.cpp:9]   --->   Operation 28 'extractvalue' 'y_last_V_tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%y_id_V_tmp = extractvalue { i16, i2, i2, i1, i1, i1, i1 } %empty, 5" [max.cpp:9]   --->   Operation 29 'extractvalue' 'y_id_V_tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%y_dest_V_tmp = extractvalue { i16, i2, i2, i1, i1, i1, i1 } %empty, 6" [max.cpp:9]   --->   Operation 30 'extractvalue' 'y_dest_V_tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (2.42ns)   --->   "%icmp_ln887 = icmp slt i16 %max_value_load, %x_data_V_tmp" [max.cpp:18]   --->   Operation 31 'icmp' 'icmp_ln887' <Predicate = true> <Delay = 2.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 32 [1/1] (1.76ns)   --->   "br i1 %icmp_ln887, label %1, label %._crit_edge" [max.cpp:18]   --->   Operation 32 'br' <Predicate = true> <Delay = 1.76>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "store i16 %x_data_V_tmp, i16* @max_value, align 2" [max.cpp:19]   --->   Operation 33 'store' <Predicate = (icmp_ln887)> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (1.76ns)   --->   "br label %._crit_edge" [max.cpp:20]   --->   Operation 34 'br' <Predicate = (icmp_ln887)> <Delay = 1.76>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%y_data_V_tmp_0 = phi i16 [ %x_data_V_tmp, %1 ], [ %max_value_load, %0 ]" [max.cpp:9]   --->   Operation 35 'phi' 'y_data_V_tmp_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i16P.i2P.i2P.i1P.i1P.i1P.i1P(i16* %y_data_V, i2* %y_keep_V, i2* %y_strb_V, i1* %y_user_V, i1* %y_last_V, i1* %y_id_V, i1* %y_dest_V, i16 %y_data_V_tmp_0, i2 %y_keep_V_tmp, i2 %y_strb_V_tmp, i1 %y_user_V_tmp, i1 %y_last_V_tmp, i1 %y_id_V_tmp, i1 %y_dest_V_tmp)" [max.cpp:9]   --->   Operation 36 'write' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >

State 2 <SV = 1> <Delay = 0.00>
ST_2 : Operation 37 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i16P.i2P.i2P.i1P.i1P.i1P.i1P(i16* %y_data_V, i2* %y_keep_V, i2* %y_strb_V, i1* %y_user_V, i1* %y_last_V, i1* %y_id_V, i1* %y_dest_V, i16 %y_data_V_tmp_0, i2 %y_keep_V_tmp, i2 %y_strb_V_tmp, i1 %y_user_V_tmp, i1 %y_last_V_tmp, i1 %y_id_V_tmp, i1 %y_dest_V_tmp)" [max.cpp:9]   --->   Operation 37 'write' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "ret void" [max.cpp:29]   --->   Operation 38 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 4.2ns
The critical path consists of the following:
	'load' operation ('max_value_load', max.cpp:18) on static variable 'max_value' [36]  (0 ns)
	'icmp' operation ('icmp_ln887', max.cpp:18) [45]  (2.43 ns)
	multiplexor before 'phi' operation ('val', max.cpp:9) with incoming values : ('max_value_load', max.cpp:18) ('x_data_V_tmp', max.cpp:9) [51]  (1.77 ns)
	'phi' operation ('val', max.cpp:9) with incoming values : ('max_value_load', max.cpp:18) ('x_data_V_tmp', max.cpp:9) [51]  (0 ns)

 <State 2>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
